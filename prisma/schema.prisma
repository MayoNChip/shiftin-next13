// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id         String  @id @default(cuid())
  email      String  @unique
  password   String?
  name       String?
  image      String?
  configured Boolean @default(false)
}

model ShiftType {
  id                  Int                   @id @unique @default(autoincrement())
  shiftType           String                @unique
  startTime           DateTime
  endTime             DateTime
  shift               Shift[]
  // employee            Employee[]
  shiftTypesToEmplyee ShiftTypeToEmployee[]
}

model ShiftTypeToEmployee {
  id         String    @unique @default(cuid())
  shiftTypes ShiftType @relation(fields: [shiftName], references: [shiftType])
  shiftName  String
  employee   Employee  @relation(fields: [employeeId], references: [id])
  employeeId String
}

model Shift {
  id          String           @id @default(cuid())
  shiftType   ShiftType?       @relation(fields: [shiftTypeId], references: [id])
  shiftTypeId Int?
  workDay     WorkDay?         @relation(fields: [workDayId], references: [id])
  workDayId   Int?
  employees   EmployeeShifts[]
}

model WorkDay {
  id     Int     @id @default(autoincrement())
  day    String  @unique
  shifts Shift[]
  // week   Int
  // month  String
  active Boolean
}

model Employee {
  id                  String                @id @default(cuid())
  firstName           String
  lastName            String
  // shiftTypes            ShiftType             @relation(fields: [canWorkShiftTypes], references: [id])
  // canWorkShiftTypes     Int
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  employeeShift       EmployeeShifts[]
  shiftTypeToEmployee ShiftTypeToEmployee[]
}

model EmployeeShifts {
  id         String   @id @default(cuid())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId String
  shift      Shift    @relation(fields: [shiftId], references: [id])
  shiftId    String
}
