// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  id            String            @id @default(cuid())
  email         String            @unique
  password      String?
  name          String?
  image         String?
  configured    Boolean           @default(false)
  // shifts        Shift[]
  shiftTypes    shiftTypeToUser[]
  shifts        shiftsToUser[]
  Employee      Employee[]
  userToWorkDay UserToWorkDay[]
  Schedule      Schedule[]
}

model ShiftType {
  id                  Int                   @id @unique @default(autoincrement())
  shiftType           String                @unique
  startTime           DateTime
  endTime             DateTime
  // shift               Shift[]
  // employee            Employee[]
  shiftTypesToEmplyee ShiftTypeToEmployee[]
  shiftTypeToUser     shiftTypeToUser[]
}

model shiftTypeToUser {
  id          String    @unique @default(cuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  shiftType   ShiftType @relation(fields: [shiftTypeId], references: [id])
  shiftTypeId Int
  shifts      Shift[]
}

model shiftsToUser {
  id      String @unique @default(cuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  shift   Shift  @relation(fields: [shiftId], references: [id])
  shiftId String
}

model ShiftTypeToEmployee {
  id         String    @unique @default(cuid())
  shiftTypes ShiftType @relation(fields: [shiftType], references: [shiftType])
  shiftType  String
  employee   Employee  @relation(fields: [employeeId], references: [id])
  employeeId String
}

model Shift {
  id              String            @id @default(cuid())
  shiftType       shiftTypeToUser?  @relation(fields: [shiftTypeId], references: [id])
  shiftTypeId     String
  // user         User?            @relation(fields: [userId], references: [id])
  // userId       String
  workDay         UserToWorkDay?    @relation(fields: [workDayId], references: [id])
  workDayId       String?
  employees       EmployeeShifts[]
  shiftsToUser    shiftsToUser[]
  shiftToSchedule ShiftToSchedule[]
}

model WorkDay {
  id            Int             @id @default(autoincrement())
  day           String          @unique
  // shifts        Shift[]
  // week   Int
  // month  String
  userToWorkDay UserToWorkDay[]
}

model UserToWorkDay {
  id        String  @id @default(cuid())
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  workDay   WorkDay @relation(fields: [workDayId], references: [id])
  workDayId Int
  active    Boolean
  shift     Shift[]
}

model Employee {
  id                  String                @id @default(cuid())
  firstName           String
  lastName            String
  // shiftTypes            ShiftType             @relation(fields: [canWorkShiftTypes], references: [id])
  // canWorkShiftTypes     Int
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  employeeShift       EmployeeShifts[]
  shiftTypeToEmployee ShiftTypeToEmployee[]
  user                User                  @relation(fields: [userId], references: [id])
  userId              String
}

model EmployeeShifts {
  id         String    @id @default(cuid())
  employee   Employee? @relation(fields: [employeeId], references: [id])
  employeeId String?
  shift      Shift?    @relation(fields: [shiftId], references: [id])
  shiftId    String?
}

model Schedule {
  id        String            @id @default(cuid())
  startDate DateTime
  endDate   DateTime
  user      User              @relation(fields: [userId], references: [id])
  userId    String
  shift     ShiftToSchedule[]
  finished  Boolean           @default(false)
  updatedAt DateTime          @updatedAt
}

model ShiftToSchedule {
  id         String   @id @default(cuid())
  shift      Shift    @relation(fields: [shiftId], references: [id])
  shiftId    String
  schedule   Schedule @relation(fields: [scheduleId], references: [id])
  scheduleId String
}
